justifyContent = {
    "justify-start": "tr-justify-start",
    "justify-end": "tr-justify-end",
    "justify-center": "tr-justify-center",
    "justify-between": "tr-justify-between",
    "justify-around": "tr-justify-around",
    "justify-evenly": "tr-justify-evenly",
}


def parseJustifyContent(val):
    return justifyContent.get(val)


alignItems = {
    "items-start": "tr-items-start",
    "items-end": "tr-items-end",
    "items-center": "tr-items-center",
    "items-baseline": "tr-items-baseline",
    "items-stretch": "tr-items-stretch",
}


def parseAlignItems(val):
    return alignItems.get(val)


textAlignment = {
    "text-left": "tr-text-left",
    "text-center": "tr-text-center",
    "text-right": "tr-text-right",
    "text-justify": "tr-text-justify",
    "text-start": "tr-text-start",
    "text-end": "tr-text-end",
}


def parseTextAlignment(val):
    return textAlignment.get(val)


maxWidth = {
    "max-w-0": "tr-max-w-0",
    "max-w-none": "tr-max-w-none",
    "max-w-xs": "tr-max-w-xs",
    "max-w-sm": "tr-max-w-sm",
    "max-w-md": "tr-max-w-md",
    "max-w-lg": "tr-max-w-lg",
    "max-w-xl": "tr-max-w-xl",
    "max-w-2xl": "tr-max-w-2xl",
    "max-w-3xl": "tr-max-w-3xl",
    "max-w-4xl": "tr-max-w-4xl",
    "max-w-5xl": "tr-max-w-5xl",
    "max-w-6xl": "tr-max-w-6xl",
    "max-w-7xl": "tr-max-w-7xl",
    "max-w-full": "tr-max-w-full",
    "max-w-min": "tr-max-w-min",
    "max-w-max": "tr-max-w-max",
    "max-w-fit": "tr-max-w-fit",
    "max-w-prose": "tr-max-w-prose",
    "max-w-screen-sm": "tr-max-w-screen-sm",
    "max-w-screen-lg": "tr-max-w-screen-lg",
    "max-w-screen-xl": "tr-max-w-screen-xl",
    "max-w-screen-2xl": "tr-max-w-screen-2xl",
}


def parseMaxWidth(val):
    return maxWidth.get(val)


spaceX = {
    "space-x-0": "tr-space-x-0",
    "space-x-0.5": "tr-space-x-0.5",
    "space-x-1": "tr-space-x-1",
    "space-x-1.5": "tr-space-x-1.5",
    "space-x-2": "tr-space-x-2",
    "space-x-2.5": "tr-space-x-2.5",
    "space-x-3": "tr-space-x-3",
    "space-x-3.5": "tr-space-x-3.5",
    "space-x-4": "tr-space-x-4",
    "space-x-5": "tr-space-x-5",
    "space-x-6": "tr-space-x-6",
    "space-x-7": "tr-space-x-7",
    "space-x-8": "tr-space-x-8",
    "space-x-9": "tr-space-x-9",
    "space-x-10": "tr-space-x-10",
    "space-x-11": "tr-space-x-11",
    "space-x-12": "tr-space-x-12",
    "space-x-14": "tr-space-x-14",
    "space-x-16": "tr-space-x-16",
    "space-x-20": "tr-space-x-20",
    "space-x-24": "tr-space-x-24",
    "space-x-28": "tr-space-x-28",
    "space-x-32": "tr-space-x-32",
    "space-x-36": "tr-space-x-36",
    "space-x-40": "tr-space-x-40",
    "space-x-44": "tr-space-x-44",
    "space-x-48": "tr-space-x-48",
    "space-x-52": "tr-space-x-52",
    "space-x-56": "tr-space-x-56",
    "space-x-60": "tr-space-x-60",
    "space-x-64": "tr-space-x-64",
    "space-x-72": "tr-space-x-72",
    "space-x-80": "tr-space-x-80",
    "space-x-96": "tr-space-x-96",
    "-space-x-0.5": "-tr-space-x-0.5",
    "-space-x-1": "-tr-space-x-1",
    "-space-x-1.5": "-tr-space-x-1.5",
    "-space-x-2": "-tr-space-x-2",
    "-space-x-2.5": "-tr-space-x-2.5",
    "-space-x-3": "-tr-space-x-3",
    "-space-x-3.5": "-tr-space-x-3.5",
    "-space-x-4": "-tr-space-x-4",
    "-space-x-5": "-tr-space-x-5",
    "-space-x-6": "-tr-space-x-6",
    "-space-x-7": "-tr-space-x-7",
    "-space-x-8": "-tr-space-x-8",
    "-space-x-9": "-tr-space-x-9",
    "-space-x-10": "-tr-space-x-10",
    "-space-x-11": "-tr-space-x-11",
    "-space-x-12": "-tr-space-x-12",
    "-space-x-14": "-tr-space-x-14",
    "-space-x-16": "-tr-space-x-16",
    "-space-x-20": "-tr-space-x-20",
    "-space-x-24": "-tr-space-x-24",
    "-space-x-28": "-tr-space-x-28",
    "-space-x-32": "-tr-space-x-32",
    "-space-x-36": "-tr-space-x-36",
    "-space-x-40": "-tr-space-x-40",
    "-space-x-44": "-tr-space-x-44",
    "-space-x-48": "-tr-space-x-48",
    "-space-x-52": "-tr-space-x-52",
    "-space-x-56": "-tr-space-x-56",
    "-space-x-60": "-tr-space-x-60",
    "-space-x-64": "-tr-space-x-64",
    "-space-x-72": "-tr-space-x-72",
    "-space-x-80": "-tr-space-x-80",
    "-space-x-96": "-tr-space-x-96",
}


def parseSpaceX(val):
    return spaceX.get(val)


spaceY = {
    "space-y-0": "tr-space-y-0",
    "space-y-0.5": "tr-space-y-0.5",
    "space-y-1": "tr-space-y-1",
    "space-y-1.5": "tr-space-y-1.5",
    "space-y-2": "tr-space-y-2",
    "space-y-2.5": "tr-space-y-2.5",
    "space-y-3": "tr-space-y-3",
    "space-y-3.5": "tr-space-y-3.5",
    "space-y-4": "tr-space-y-4",
    "space-y-5": "tr-space-y-5",
    "space-y-6": "tr-space-y-6",
    "space-y-7": "tr-space-y-7",
    "space-y-8": "tr-space-y-8",
    "space-y-9": "tr-space-y-9",
    "space-y-10": "tr-space-y-10",
    "space-y-11": "tr-space-y-11",
    "space-y-12": "tr-space-y-12",
    "space-y-14": "tr-space-y-14",
    "space-y-16": "tr-space-y-16",
    "space-y-20": "tr-space-y-20",
    "space-y-24": "tr-space-y-24",
    "space-y-28": "tr-space-y-28",
    "space-y-32": "tr-space-y-32",
    "space-y-36": "tr-space-y-36",
    "space-y-40": "tr-space-y-40",
    "space-y-44": "tr-space-y-44",
    "space-y-48": "tr-space-y-48",
    "space-y-52": "tr-space-y-52",
    "space-y-56": "tr-space-y-56",
    "space-y-60": "tr-space-y-60",
    "space-y-64": "tr-space-y-64",
    "space-y-72": "tr-space-y-72",
    "space-y-80": "tr-space-y-80",
    "space-y-96": "tr-space-y-96",
    "-space-y-0.5": "-tr-space-y-0.5",
    "-space-y-1": "-tr-space-y-1",
    "-space-y-1.5": "-tr-space-y-1.5",
    "-space-y-2": "-tr-space-y-2",
    "-space-y-2.5": "-tr-space-y-2.5",
    "-space-y-3": "-tr-space-y-3",
    "-space-y-3.5": "-tr-space-y-3.5",
    "-space-y-4": "-tr-space-y-4",
    "-space-y-5": "-tr-space-y-5",
    "-space-y-6": "-tr-space-y-6",
    "-space-y-7": "-tr-space-y-7",
    "-space-y-8": "-tr-space-y-8",
    "-space-y-9": "-tr-space-y-9",
    "-space-y-10": "-tr-space-y-10",
    "-space-y-11": "-tr-space-y-11",
    "-space-y-12": "-tr-space-y-12",
    "-space-y-14": "-tr-space-y-14",
    "-space-y-16": "-tr-space-y-16",
    "-space-y-20": "-tr-space-y-20",
    "-space-y-24": "-tr-space-y-24",
    "-space-y-28": "-tr-space-y-28",
    "-space-y-32": "-tr-space-y-32",
    "-space-y-36": "-tr-space-y-36",
    "-space-y-40": "-tr-space-y-40",
    "-space-y-44": "-tr-space-y-44",
    "-space-y-48": "-tr-space-y-48",
    "-space-y-52": "-tr-space-y-52",
    "-space-y-56": "-tr-space-y-56",
    "-space-y-60": "-tr-space-y-60",
    "-space-y-64": "-tr-space-y-64",
    "-space-y-72": "-tr-space-y-72",
    "-space-y-80": "-tr-space-y-80",
    "-space-y-96": "-tr-space-y-96",
}


def parseSpaceY(val):
    return spaceY.get(val)


marginTop = {
    "mt-0": "tr-mt-0",
    "mt-0.5": "tr-mt-0.5",
    "mt-1": "tr-mt-1",
    "mt-1.5": "tr-mt-1.5",
    "mt-2": "tr-mt-2",
    "mt-2.5": "tr-mt-2.5",
    "mt-3": "tr-mt-3",
    "mt-3.5": "tr-mt-3.5",
    "mt-4": "tr-mt-4",
    "mt-5": "tr-mt-5",
    "mt-6": "tr-mt-6",
    "mt-7": "tr-mt-7",
    "mt-8": "tr-mt-8",
    "mt-9": "tr-mt-9",
    "mt-10": "tr-mt-10",
    "mt-11": "tr-mt-11",
    "mt-12": "tr-mt-12",
    "mt-14": "tr-mt-14",
    "mt-16": "tr-mt-16",
    "mt-20": "tr-mt-20",
    "mt-24": "tr-mt-24",
    "mt-28": "tr-mt-28",
    "mt-32": "tr-mt-32",
    "mt-36": "tr-mt-36",
    "mt-40": "tr-mt-40",
    "mt-44": "tr-mt-44",
    "mt-48": "tr-mt-48",
    "mt-52": "tr-mt-52",
    "mt-56": "tr-mt-56",
    "mt-60": "tr-mt-60",
    "mt-64": "tr-mt-64",
    "mt-72": "tr-mt-72",
    "mt-80": "tr-mt-80",
    "mt-96": "tr-mt-96",
    "-mt-0.5": "-tr-mt-0.5",
    "-mt-1": "-tr-mt-1",
    "-mt-1.5": "-tr-mt-1.5",
    "-mt-2": "-tr-mt-2",
    "-mt-2.5": "-tr-mt-2.5",
    "-mt-3": "-tr-mt-3",
    "-mt-3.5": "-tr-mt-3.5",
    "-mt-4": "-tr-mt-4",
    "-mt-5": "-tr-mt-5",
    "-mt-6": "-tr-mt-6",
    "-mt-7": "-tr-mt-7",
    "-mt-8": "-tr-mt-8",
    "-mt-9": "-tr-mt-9",
    "-mt-10": "-tr-mt-10",
    "-mt-11": "-tr-mt-11",
    "-mt-12": "-tr-mt-12",
    "-mt-14": "-tr-mt-14",
    "-mt-16": "-tr-mt-16",
    "-mt-20": "-tr-mt-20",
    "-mt-24": "-tr-mt-24",
    "-mt-28": "-tr-mt-28",
    "-mt-32": "-tr-mt-32",
    "-mt-36": "-tr-mt-36",
    "-mt-40": "-tr-mt-40",
    "-mt-44": "-tr-mt-44",
    "-mt-48": "-tr-mt-48",
    "-mt-52": "-tr-mt-52",
    "-mt-56": "-tr-mt-56",
    "-mt-60": "-tr-mt-60",
    "-mt-64": "-tr-mt-64",
    "-mt-72": "-tr-mt-72",
    "-mt-80": "-tr-mt-80",
    "-mt-96": "-tr-mt-96",
}


def parseMarginTop(val):
    return marginTop.get(val)


height = {
    "h-0": "tr-h-0",
    "h-0.5": "tr-h-0.5",
    "h-1": "tr-h-1",
    "h-1.5": "tr-h-1.5",
    "h-2": "tr-h-2",
    "h-2.5": "tr-h-2.5",
    "h-3": "tr-h-3",
    "h-3.5": "tr-h-3.5",
    "h-4": "tr-h-4",
    "h-5": "tr-h-5",
    "h-6": "tr-h-6",
    "h-7": "tr-h-7",
    "h-8": "tr-h-8",
    "h-9": "tr-h-9",
    "h-10": "tr-h-10",
    "h-11": "tr-h-11",
    "h-12": "tr-h-12",
    "h-14": "tr-h-14",
    "h-16": "tr-h-16",
    "h-20": "tr-h-20",
    "h-24": "tr-h-24",
    "h-28": "tr-h-28",
    "h-32": "tr-h-32",
    "h-36": "tr-h-36",
    "h-40": "tr-h-40",
    "h-44": "tr-h-44",
    "h-48": "tr-h-48",
    "h-52": "tr-h-52",
    "h-56": "tr-h-56",
    "h-60": "tr-h-60",
    "h-64": "tr-h-64",
    "h-72": "tr-h-72",
    "h-80": "tr-h-80",
    "h-96": "tr-h-96",
}


def parseHeight(val):
    return height.get(val)


width = {
    "w-0": "tr-w-0",
    "w-0.5": "tr-w-0.5",
    "w-1": "tr-w-1",
    "w-1.5": "tr-w-1.5",
    "w-2": "tr-w-2",
    "w-2.5": "tr-w-2.5",
    "w-3": "tr-w-3",
    "w-3.5": "tr-w-3.5",
    "w-4": "tr-w-4",
    "w-5": "tr-w-5",
    "w-6": "tr-w-6",
    "w-7": "tr-w-7",
    "w-8": "tr-w-8",
    "w-9": "tr-w-9",
    "w-10": "tr-w-10",
    "w-11": "tr-w-11",
    "w-12": "tr-w-12",
    "w-14": "tr-w-14",
    "w-16": "tr-w-16",
    "w-20": "tr-w-20",
    "w-24": "tr-w-24",
    "w-28": "tr-w-28",
    "w-32": "tr-w-32",
    "w-36": "tr-w-36",
    "w-40": "tr-w-40",
    "w-44": "tr-w-44",
    "w-48": "tr-w-48",
    "w-52": "tr-w-52",
    "w-56": "tr-w-56",
    "w-60": "tr-w-60",
    "w-64": "tr-w-64",
    "w-72": "tr-w-72",
    "w-80": "tr-w-80",
    "w-96": "tr-w-96",
}


def parseWidth(val):
    return width.get(val)


gapX = {
    "gap-x-0": "tr-gap-x-0",
    "gap-x-0.5": "tr-gap-x-0.5",
    "gap-x-1": "tr-gap-x-1",
    "gap-x-1.5": "tr-gap-x-1.5",
    "gap-x-2": "tr-gap-x-2",
    "gap-x-2.5": "tr-gap-x-2.5",
    "gap-x-3": "tr-gap-x-3",
    "gap-x-3.5": "tr-gap-x-3.5",
    "gap-x-4": "tr-gap-x-4",
    "gap-x-5": "tr-gap-x-5",
    "gap-x-6": "tr-gap-x-6",
    "gap-x-7": "tr-gap-x-7",
    "gap-x-8": "tr-gap-x-8",
    "gap-x-9": "tr-gap-x-9",
    "gap-x-10": "tr-gap-x-10",
    "gap-x-11": "tr-gap-x-11",
    "gap-x-12": "tr-gap-x-12",
    "gap-x-14": "tr-gap-x-14",
    "gap-x-16": "tr-gap-x-16",
    "gap-x-20": "tr-gap-x-20",
    "gap-x-24": "tr-gap-x-24",
    "gap-x-28": "tr-gap-x-28",
    "gap-x-32": "tr-gap-x-32",
    "gap-x-36": "tr-gap-x-36",
    "gap-x-40": "tr-gap-x-40",
    "gap-x-44": "tr-gap-x-44",
    "gap-x-48": "tr-gap-x-48",
    "gap-x-52": "tr-gap-x-52",
    "gap-x-56": "tr-gap-x-56",
    "gap-x-60": "tr-gap-x-60",
    "gap-x-64": "tr-gap-x-64",
    "gap-x-72": "tr-gap-x-72",
    "gap-x-80": "tr-gap-x-80",
    "gap-x-96": "tr-gap-x-96",
}


def parseGapX(val):
    return gapX.get(val)


gapY = {
    "gap-y-0": "tr-gap-y-0",
    "gap-y-0.5": "tr-gap-y-0.5",
    "gap-y-1": "tr-gap-y-1",
    "gap-y-1.5": "tr-gap-y-1.5",
    "gap-y-2": "tr-gap-y-2",
    "gap-y-2.5": "tr-gap-y-2.5",
    "gap-y-3": "tr-gap-y-3",
    "gap-y-3.5": "tr-gap-y-3.5",
    "gap-y-4": "tr-gap-y-4",
    "gap-y-5": "tr-gap-y-5",
    "gap-y-6": "tr-gap-y-6",
    "gap-y-7": "tr-gap-y-7",
    "gap-y-8": "tr-gap-y-8",
    "gap-y-9": "tr-gap-y-9",
    "gap-y-10": "tr-gap-y-10",
    "gap-y-11": "tr-gap-y-11",
    "gap-y-12": "tr-gap-y-12",
    "gap-y-14": "tr-gap-y-14",
    "gap-y-16": "tr-gap-y-16",
    "gap-y-20": "tr-gap-y-20",
    "gap-y-24": "tr-gap-y-24",
    "gap-y-28": "tr-gap-y-28",
    "gap-y-32": "tr-gap-y-32",
    "gap-y-36": "tr-gap-y-36",
    "gap-y-40": "tr-gap-y-40",
    "gap-y-44": "tr-gap-y-44",
    "gap-y-48": "tr-gap-y-48",
    "gap-y-52": "tr-gap-y-52",
    "gap-y-56": "tr-gap-y-56",
    "gap-y-60": "tr-gap-y-60",
    "gap-y-64": "tr-gap-y-64",
    "gap-y-72": "tr-gap-y-72",
    "gap-y-80": "tr-gap-y-80",
    "gap-y-96": "tr-gap-y-96",
}


def parseGapY(val):
    return gapY.get(val)
