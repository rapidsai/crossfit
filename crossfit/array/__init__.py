# noqa

from crossfit.array.ops import *  # noqa: F401, F403
from crossfit.array.conversion import convert  # noqa: F401
from crossfit.array.dispatch import (  # noqa: F401
    crossarray,  # noqa: F401
    numpy,  # noqa: F401
    with_dispatch,  # noqa: F401
    np_backend_dispatch,  # noqa: F401
    NPBackend,  # noqa: F401
)


from crossfit.array.backend.cudf_backend import *  # noqa: F401, F403
from crossfit.array.backend.cupy_backend import *  # noqa: F401, F403
from crossfit.array.backend.jax_backend import *  # noqa: F401, F403
from crossfit.array.backend.tf_backend import *  # noqa: F401, F403
from crossfit.array.backend.torch_backend import *  # noqa: F401, F403


# __all__ = [
#     "crossnp",
#     "convert",
#     "with_dispatch",
#     "np_backend_dispatch",
#     "NPBackend",
#     "dtype",
#     "errstate",
#     "all",
#     "amax",
#     "amin",
#     "any",
#     "argmax",
#     "argmin",
#     "argpartition",
#     "argsort",
#     "around",
#     "choose",
#     "clip",
#     "compress",
#     "cumprod",
#     "cumproduct",
#     "cumsum",
#     "diagonal",
#     "mean",
#     "ndim",
#     "nonzero",
#     "partition",
#     "prod",
#     "product",
#     "ptp",
#     "put",
#     "ravel",
#     "repeat",
#     "reshape",
#     "resize",
#     "round_",
#     "searchsorted",
#     "shape",
#     "size",
#     "sometrue",
#     "sort",
#     "squeeze",
#     "std",
#     "sum",
#     "swapaxes",
#     "take",
#     "trace",
#     "transpose",
#     "var",
#     "average",
#     "piecewise",
#     "select",
#     "copy",
#     "interp",
#     "angle",
#     "unwrap",
#     "sort_complex",
#     "trim_zeros",
#     "extract",
#     "place",
#     "cov",
#     "corrcoef",
#     "percentile",
#     "quantile",
#     "trapz",
#     "meshgrid",
#     "delete",
#     "insert",
#     "append",
#     "ediff1d",
#     "setxor1d",
#     "union1d",
#     "setdiff1d",
#     "unique",
#     "in1d",
#     "isin",
#     "absolute",
#     "add",
#     "arccos",
#     "arccosh",
#     "arcsin",
#     "arcsinh",
#     "arctan2",
#     "arctan",
#     "arctanh",
#     "bitwise_and",
#     "bitwise_not",
#     "bitwise_or",
#     "bitwise_xor",
#     "cbrt",
#     "ceil",
#     "conj",
#     "conjugate",
#     "copysign",
#     "cos",
#     "cosh",
#     "deg2rad",
#     "degrees",
#     "divide",
#     "divmod",
#     "equal",
#     "exp2",
#     "exp",
#     "expm1",
#     "fabs",
#     "float_power",
#     "floor",
#     "floor_divide",
#     "fmax",
#     "fmin",
#     "fmod",
#     "frexp",
#     "gcd",
#     "greater",
#     "greater_equal",
#     "heaviside",
#     "hypot",
#     "invert",
#     "isfinite",
#     "isinf",
#     "isnan",
#     "isnat",
#     "lcm",
#     "ldexp",
#     "left_shift",
#     "less",
#     "less_equal",
#     "log10",
#     "log1p",
#     "log2",
#     "log",
#     "logaddexp2",
#     "logaddexp",
#     "logical_and",
#     "logical_not",
#     "logical_or",
#     "logical_xor",
#     "matmul",
#     "maximum",
#     "minimum",
#     "mod",
#     "modf",
#     "multiply",
#     "negative",
#     "nextafter",
#     "not_equal",
#     "positive",
#     "power",
#     "rad2deg",
#     "radians",
#     "reciprocal",
#     "remainder",
#     "right_shift",
#     "rint",
#     "sign",
#     "signbit",
#     "sin",
#     "sinh",
#     "spacing",
#     "sqrt",
#     "square",
#     "subtract",
#     "tan",
#     "tanh",
#     "true_divide",
#     "trunc",
#     "abs",
# ]
